# Generated by Django 2.1.1 on 2018-10-07 21:24

from django.db import migrations, models
import users.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(default='DEFAULT VALUE1', max_length=200, unique=True)),
                ('password', models.CharField(default='DEFAULT VALUE1', max_length=200)),
                ('typeOfUser', models.CharField(default='DEFAULT VALUE1', max_length=100)),
                ('phone_number', models.IntegerField(default='12345678901')),
                ('authy_id', models.CharField(blank=True, max_length=12, null=True)),
                ('email', models.EmailField(default='joemomma@yahoo.com', max_length=254)),
                ('securityQ', models.CharField(default='What is your username?1', max_length=5000)),
                ('securityAns', models.CharField(default='DEFAULT VALUE1', max_length=5000)),
                ('country_code', models.CharField(default='+1', max_length=5)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users.managers.AccountUserManager()),
            ],
        ),
    ]
